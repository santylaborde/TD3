     1                                  global td3_memcopy
     2                                  
     3                                  ; *************************************** MAPEO DE ROM *******************************************************
     4                                  ; ********** CODIGO *********************************************** Comentarios ******************************
     5                                  											
     6                                  											; En Bytes:     1MB - 64KB
     7                                  											; En Decimal:   2^20  - 2^16
     8                                  											; En Hexa:      0x100000 - 0x10000
     9                                  ORG 0xF0000									; Resultado:    0xF0000 (Origen de nuestra ROM)
    10                                  
    11                                  USE16										; Directiva para el nasm: Segmentacion de 16 bits (modo real)
    12                                  code_size EQU (end - idle)				    ; Tamaño del código generado 
    13                                  
    14                                  
    15 00000000 90<rept>                times (65536-code_size) db 0x90				; Rellenamos la ROM con 0x90 (NOP)		
    16                                  											; Otra opción: times 4096 resb 1
    17                                  
    18                                  ; ****************************************** MEMCOPY *********************************************************
    19                                  ; ********** CODIGO *********************************************** Comentarios ******************************
    20                                  ; Subrutina: memcopy
    21                                  ; Recibe:
    22                                  ; es:di la dirección lógica de destino (a donde quiero copiar)
    23                                  ; ds:si la dirección lógica de origen (lo que quiero copiar)
    24                                  ; cx la cantidad de bytes a copiar
    25                                  ; Retorna:
    26                                  ; NULL si hubo error
    27                                  ; puntero a la dirección de inicio de la nueva copia
    28                                  
    29                                  
    30                                  idle:
    31 0000FFC0 F4                      	hlt
    32 0000FFC1 EBFD                    	jmp	idle
    33                                  
    34                                  init:
    35 0000FFC3 31DB                    	xor	bx,bx		                        ;Inicializamos el registro es en 0
    36 0000FFC5 8EC3                    	mov	es,bx		                        ;Si bien es su valor luego del reset...
    37                                  ;	mov	di,0x00000	                        ;Offset dentro del segmento destino
    38 0000FFC7 BF0000                      mov	di,0xF0000	                        ;Offset dentro del segmento destino
    38          ******************       warning: word data exceeds bounds [-w+number-overflow]
    39 0000FFCA BE[C0FF]                	mov	si,idle                             ;Offset dentro del segmento origen
    40 0000FFCD B94000                  	mov	cx,code_size	                    ;Cantidad de bytes a copiar (parte útil de la ROM)
    41 0000FFD0 BB[D5FF]                	mov	bx,td3_memcopy	                    ;Como no se ha inicializado la RAM aun....
    42 0000FFD3 FFE3                    	jmp	bx		                            ;saltamos en vez de llamar a subrutina 
    43                                  
    44                                  td3_memcopy:
    45 0000FFD5 FC                      	cld
    46                                  
    47                                  next:
    48 0000FFD6 2E8A04                  	mov	al,byte[cs:si]	                    ; ver comentario al final
    49 0000FFD9 AA                      	stosb			                        ;[es:di]<-al , di++
    50 0000FFDA 46                      	inc 	si		                        ;apuntamos al siguiente byte en la ROM
    51 0000FFDB E2F9                    	loop	next		                    ;cx--, if(FLAGS.ZF==0) goto next 
    52 0000FFDD BB[E2FF]                	mov	bx,ret0
    53 0000FFE0 FFE3                    	jmp 	bx
    54                                  
    55                                  ret0:
    56                                  ;	jmp	0x0:0x00000	                        ;saltamos a la copia
    57 0000FFE2 EA00000000              	jmp	0x0:0xF0000	                        ;saltamos a la copia
    57          ******************       warning: word data exceeds bounds [-w+number-overflow]
    58                                  
    59 0000FFE7 90<rept>                align 16
    60                                  
    61                                  init16:				
    62 0000FFF0 FA                      	cli
    63 0000FFF1 EBD0                    	jmp	init
    64                                  
    65                                  aqui:
    66 0000FFF3 F4                      	hlt
    67 0000FFF4 EBFD                    	jmp	aqui
    68                                  
    69 0000FFF6 90<rept>                align 16		
    70                                  end:
